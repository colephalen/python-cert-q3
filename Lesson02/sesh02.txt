in class notes 10-1-19

in base.jinja2: (maybe?)
in html: <a href "{{url_for('all') ~becomes~ <a href='/donations/'

Peewee explained:

"two tables" Donor and Donation

Donor, 
int:ID as a 'primary key' aka a 'unique identifier', name

int:ID: varchar.name
{
0: Alice,
1: Bob,
.
.
.
}

Donation,
int:ID 'another case of a primary key', foriegn key: name (an int), donation amount
int:ID, varchar.name, Int:Value

command line:
$ curl -i "the url"
might get past paywall BS for NYT etc


database reading stuff: "principals of database normalization"

Bootstrap is an easy way to present your backend code in a pretty way

Ron OH: 1-3pm Saturday
Joseph OH: 11-1pm Sunday



how the main.py interacts with create.jinja2


create.jinja2:

{% extends 'base.jinja2' %}

{% block subtitle %}Add a task{% endblock subtitle %}

{% block content %}
<form method="POST">
    <label for="name-input">Name:</label>
    <input id="name-input" type="text" name="name">
    <input type="submit" value="Create Task">
</form>
{% endblock content %}


main.py 'view'

@app.route('/create', methods=['GET', 'POST'])
def create():

    if request.method == 'POST':
        task = Task(name=request.form['name'])
        task.save()

        return redirect(url_for('all_tasks'))
    
    else:
        return render_template('create.jinja2')





